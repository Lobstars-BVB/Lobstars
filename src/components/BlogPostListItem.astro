---
interface Props {
  title: string;
  pubDate: Date;
  description: string;
  author: string;
  tags: Array<string>;
  link: string;
}

const { title, pubDate, author, tags, link } = Astro.props;
---

<li
  class="rounded-sm bg-white bg-opacity-70 p-4 shadow-md transition hover:shadow-lg"
>
  <article class="flex cursor-pointer flex-col gap-2" data-href={link}>
    <p class="text-xs text-gray-500">
      Date:
      <time datetime={pubDate.toString()}>{pubDate.toDateString()}</time>
    </p>
    <div class="flex flex-col gap-1">
      <h3>{title}</h3>
      <p class="text-sm text-gray-600">Author: {author}</p>
    </div>
    <div class="flex flex-wrap gap-1">
      {
        tags.map((tag) => (
          <p>
            <button
              data-href={`#TODO-${tag}`}
              class="tag rounded-xl bg-gray-100 px-3 py-1.5 text-sm text-gray-800 hover:bg-gray-200"
            >
              {tag}
            </button>
            {/* We need special styling for tag buttons */}
          </p>
        ))
      }
    </div>
  </article>
</li>

<script>
  document.querySelectorAll("article[data-href]").forEach((article) => {
    article.addEventListener("click", (e) => {
      const href = article.dataset.href;
      if (href) window.location.href = href;
    });
  });

  document.querySelectorAll("button.tag").forEach((tag) => {
    tag.addEventListener("click", (e) => {
      e.stopPropagation();
      const href = tag.dataset.href;
      if (href) window.location.href = href;
    });
  });
</script>
