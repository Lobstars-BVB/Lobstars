@import "@radix-ui/colors/black-alpha.css";
@import "tailwindcss/utilities";

.NavigationMenuRoot * {
    box-sizing: border-box;
}

.NavigationMenuTrigger {
    background: none;
    border: none;
    all: unset;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 2px;
    outline: none;
}

.NavigationMenuRoot {
    position: relative;
    display: flex;
    justify-content: right;
    width: 100vw;
    z-index: 1;
}

.NavigationMenuList {
    display: flex;
    justify-content: center;
    padding: 4px;
    border-radius: 6px;
    list-style: none;
    margin: 0;
}

.NavigationMenuTrigger,
.NavigationMenuLink {
    padding: 8px 12px;
    outline: none;
    user-select: none;
    font-weight: 700;
    line-height: 1;
    border-radius: 4px;
    font-size: 15px;
    @apply text-neon-pink-dark;
}
.NavigationMenuTrigger:focus,
.NavigationMenuLink:focus {
    box-shadow: 0 0 0 2px theme('colors.neon-pink.300');
}
.NavigationMenuTrigger:hover,
.NavigationMenuLink:hover {
    @apply text-neon-pink-600
}

.NavigationMenuTrigger {
    padding: 8px 4px 8px 12px;
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 2px;
}

.NavigationMenuLink {
    display: block;
    text-decoration: none;
}

.NavigationMenuContent {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    animation-duration: 250ms;
    animation-timing-function: ease;
}
.NavigationMenuContent[data-motion="from-start"] {
    animation-name: enterFromLeft;
}
.NavigationMenuContent[data-motion="from-end"] {
    animation-name: enterFromRight;
}
.NavigationMenuContent[data-motion="to-start"] {
    animation-name: exitToLeft;
}
.NavigationMenuContent[data-motion="to-end"] {
    animation-name: exitToRight;
}
@media only screen and (min-width: 600px) {
    .NavigationMenuContent {
        width: auto;
    }
}

.NavigationMenuIndicator {
    display: flex;
    align-items: flex-end;
    justify-content: center;
    height: 10px;
    top: 100%;
    overflow: hidden;
    z-index: 1;
    transition:
            width,
            transform 250ms ease;
}
.NavigationMenuIndicator[data-state="visible"] {
    animation: fadeIn 200ms ease;
}
.NavigationMenuIndicator[data-state="hidden"] {
    animation: fadeOut 200ms ease;
}

.NavigationMenuViewport {
    position: relative;
    transform-origin: top right;
    margin-top: 10px;
    width: 100%;
    background-color: white;
    border-radius: 6px;
    overflow: hidden;
    box-shadow:
            0px 10px 38px -10px theme('colors.neon-pink.200'),
            0px 10px 20px -15px theme('colors.neon-pink.200');
    height: var(--radix-navigation-menu-viewport-height);
    transition:
            width,
            height,
            300ms ease;
}
.NavigationMenuViewport[data-state="open"] {
    animation: scaleIn 200ms ease;
}
.NavigationMenuViewport[data-state="closed"] {
    animation: scaleOut 200ms ease;
}
@media only screen and (min-width: 600px) {
    .NavigationMenuViewport {
        width: var(--radix-navigation-menu-viewport-width);
    }
}

.DropdownList {
    display: flex;
    flex-direction: column;
    gap: 4px;
    padding: 2px;
    margin: 0;
    list-style: none;
    min-width: 180px;
}

.ListItemLink {
    display: block;
    outline: none;
    text-decoration: none;
    user-select: none;
    padding: 8px 12px;
    border-radius: 4px;
    font-size: 14px;
    font-weight: 600;
    line-height: 1;
    @apply text-neon-pink-dark;
}
.ListItemLink:focus {
    box-shadow: 0 0 0 2px theme('colors.neon-pink.300');
}
.ListItemLink:hover {
    @apply bg-neon-pink-50;
}

.ViewportPosition {
    position: absolute;
    display: flex;
    justify-content: flex-end;
    width: 100%;
    top: 100%;
    left: 0;
    perspective: 2000px;
}

.CaretDown {
    position: relative;
    @apply text-neon-pink-dark;
    top: 1px;
    transition: transform 250ms ease-out;
}
[data-state="open"] > .CaretDown {
    transform: rotate(-180deg);
}

.Arrow {
    position: relative;
    top: 70%;
    background-color: white;
    width: 10px;
    height: 10px;
    transform: rotate(45deg);
    border-top-left-radius: 2px;
}

@keyframes enterFromRight {
    from {
        opacity: 0;
        transform: translateX(200px);
    }
    to {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes enterFromLeft {
    from {
        opacity: 0;
        transform: translateX(-200px);
    }
    to {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes exitToRight {
    from {
        opacity: 1;
        transform: translateX(0);
    }
    to {
        opacity: 0;
        transform: translateX(200px);
    }
}

@keyframes exitToLeft {
    from {
        opacity: 1;
        transform: translateX(0);
    }
    to {
        opacity: 0;
        transform: translateX(-200px);
    }
}

@keyframes scaleIn {
    from {
        opacity: 0;
        transform: rotateX(-30deg) scale(0.9);
    }
    to {
        opacity: 1;
        transform: rotateX(0deg) scale(1);
    }
}

@keyframes scaleOut {
    from {
        opacity: 1;
        transform: rotateX(0deg) scale(1);
    }
    to {
        opacity: 0;
        transform: rotateX(-10deg) scale(0.95);
    }
}

@keyframes fadeIn {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

@keyframes fadeOut {
    from {
        opacity: 1;
    }
    to {
        opacity: 0;
    }
}
